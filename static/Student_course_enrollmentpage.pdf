<!doctype html>
<html lang=en>
  <head>
    <title>OSError: No wkhtmltopdf executable found: &#34;b&#39;&#39;&#34;
If this file exists please check that this process can read it or you can pass path to it manually in method call, check README. Otherwise please install wkhtmltopdf - https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "Rj0hKsZZ3Hl5xCtq6Rg5";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>OSError</h1>
<div class="detail">
  <p class="errormsg">OSError: No wkhtmltopdf executable found: &#34;b&#39;&#39;&#34;
If this file exists please check that this process can read it or you can pass path to it manually in method call, check README. Otherwise please install wkhtmltopdf - https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-3052545179312">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py"</cite>,
      line <em class="line">35</em>,
      in <code class="function">__init__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">            </span>lines = self.wkhtmltopdf.splitlines()</pre>
<pre class="line before"><span class="ws">            </span>if len(lines) &gt; 0:</pre>
<pre class="line before"><span class="ws">                </span>self.wkhtmltopdf = lines[0].strip()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">            </span>with open(self.wkhtmltopdf) as f:
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                </span>pass</pre>
<pre class="line after"><span class="ws">        </span>except (IOError, FileNotFoundError) as e:</pre>
<pre class="line after"><span class="ws">            </span>raise IOError(&#39;No wkhtmltopdf executable found: &#34;%s&#34;\n&#39;</pre>
<pre class="line after"><span class="ws">                          </span>&#39;If this file exists please check that this process can &#39;</pre>
<pre class="line after"><span class="ws">                          </span>&#39;read it or you can pass path to it manually in method call, &#39;</pre></div>
</div>

<li><div class="exc-divider">During handling of the above exception, another exception occurred:</div>
<li><div class="frame" id="frame-3052545168368">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1498</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div>
</div>

<li><div class="frame" id="frame-3052545173264">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1476</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-3052545173408">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1473</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()
<span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-3052545173552">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">882</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)
<span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-3052545173696">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">880</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()
<span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-3052545173840">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py"</cite>,
      line <em class="line">865</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
<span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-3052545173984">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\app.py"</cite>,
      line <em class="line">19</em>,
      in <code class="function">download</code></h4>
  <div class="source "><pre class="line before"><span class="ws"></span>def download():</pre>
<pre class="line before"><span class="ws">    </span>data = request.get_json()</pre>
<pre class="line before"><span class="ws">    </span>content = data[&#39;content&#39;]</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># Use pdfkit to convert HTML to PDF</pre>
<pre class="line current"><span class="ws">    </span>pdf = pdfkit.from_string(content, False)
<span class="ws">    </span>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span># Create a response object with the PDF file</pre>
<pre class="line after"><span class="ws">    </span>return send_file(</pre>
<pre class="line after"><span class="ws">        </span>io.BytesIO(pdf),</pre>
<pre class="line after"><span class="ws">        </span>attachment_filename=&#39;page.pdf&#39;,</pre></div>
</div>

<li><div class="frame" id="frame-3052545174128">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\api.py"</cite>,
      line <em class="line">72</em>,
      in <code class="function">from_string</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>:param verbose: (optional) By default &#39;--quiet&#39; is passed to all calls, set this to False to get wkhtmltopdf output to stdout.</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>Returns: True on success</pre>
<pre class="line before"><span class="ws">    </span>&#34;&#34;&#34;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line current"><span class="ws">    </span>r = PDFKit(input, &#39;string&#39;, options=options, toc=toc, cover=cover, css=css,
<span class="ws">    </span>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">               </span>configuration=configuration, cover_first=cover_first, verbose=verbose)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return r.to_pdf(output_path)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-3052545176432">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\pdfkit.py"</cite>,
      line <em class="line">45</em>,
      in <code class="function">__init__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __init__(self, url_or_file, type_, options=None, toc=None, cover=None,</pre>
<pre class="line before"><span class="ws">                 </span>css=None, configuration=None, cover_first=False, verbose=False):</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>self.source = Source(url_or_file, type_)</pre>
<pre class="line current"><span class="ws">        </span>self.configuration = (Configuration() if configuration is None
<span class="ws">        </span>                      ^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                              </span>else configuration)</pre>
<pre class="line after"><span class="ws">        </span>try:</pre>
<pre class="line after"><span class="ws">            </span>self.wkhtmltopdf = self.configuration.wkhtmltopdf.decode(&#39;utf-8&#39;)</pre>
<pre class="line after"><span class="ws">        </span>except AttributeError:</pre>
<pre class="line after"><span class="ws">            </span>self.wkhtmltopdf = self.configuration.wkhtmltopdf</pre></div>
</div>

<li><div class="frame" id="frame-3052545178592">
  <h4>File <cite class="filename">"C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py"</cite>,
      line <em class="line">38</em>,
      in <code class="function">__init__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">                </span>self.wkhtmltopdf = lines[0].strip()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">            </span>with open(self.wkhtmltopdf) as f:</pre>
<pre class="line before"><span class="ws">                </span>pass</pre>
<pre class="line before"><span class="ws">        </span>except (IOError, FileNotFoundError) as e:</pre>
<pre class="line current"><span class="ws">            </span>raise IOError(&#39;No wkhtmltopdf executable found: &#34;%s&#34;\n&#39;
<span class="ws">            </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre>
<pre class="line after"><span class="ws">                          </span>&#39;If this file exists please check that this process can &#39;</pre>
<pre class="line after"><span class="ws">                          </span>&#39;read it or you can pass path to it manually in method call, &#39;</pre>
<pre class="line after"><span class="ws">                          </span>&#39;check README. Otherwise please install wkhtmltopdf - &#39;</pre>
<pre class="line after"><span class="ws">                          </span>&#39;https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf&#39; % self.wkhtmltopdf)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>
</ul>
  <blockquote>OSError: No wkhtmltopdf executable found: &#34;b&#39;&#39;&#34;
If this file exists please check that this process can read it or you can pass path to it manually in method call, check README. Otherwise please install wkhtmltopdf - https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py&#34;, line 35, in __init__
    with open(self.wkhtmltopdf) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: b&#39;&#39;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\app.py&#34;, line 19, in download
    pdf = pdfkit.from_string(content, False)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\api.py&#34;, line 72, in from_string
    r = PDFKit(input, &#39;string&#39;, options=options, toc=toc, cover=cover, css=css,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\pdfkit.py&#34;, line 45, in __init__
    self.configuration = (Configuration() if configuration is None
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File &#34;C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py&#34;, line 38, in __init__
    raise IOError(&#39;No wkhtmltopdf executable found: &#34;%s&#34;\n&#39;
OSError: No wkhtmltopdf executable found: &#34;b&#39;&#39;&#34;
If this file exists please check that this process can read it or you can pass path to it manually in method call, check README. Otherwise please install wkhtmltopdf - https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py", line 35, in __init__
    with open(self.wkhtmltopdf) as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: b''

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 1476, in wsgi_app
    response = self.handle_exception(e)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\flask\app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\app.py", line 19, in download
    pdf = pdfkit.from_string(content, False)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\api.py", line 72, in from_string
    r = PDFKit(input, 'string', options=options, toc=toc, cover=cover, css=css,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\pdfkit.py", line 45, in __init__
    self.configuration = (Configuration() if configuration is None
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PC\PycharmProject\Assignment2\venv\Lib\site-packages\pdfkit\configuration.py", line 38, in __init__
    raise IOError('No wkhtmltopdf executable found: "%s"\n'
OSError: No wkhtmltopdf executable found: "b''"
If this file exists please check that this process can read it or you can pass path to it manually in method call, check README. Otherwise please install wkhtmltopdf - https://github.com/JazzCore/python-pdfkit/wiki/Installing-wkhtmltopdf


-->
